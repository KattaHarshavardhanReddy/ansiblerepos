- name: creation of ec2 and r53
  hosts: local
  connection: local
  vars:
    subnet_id: subnet-0f0a1caac0642c04d
    sg_id: sg-085362a8c899eb18a
    ami_id: ami-09c813fb71547fc4f
    instance_type: t3.micro


  tasks:
  - name: install python libs
    ansible.builtin.pip:
      name: "{{ item }}"
      executable: pip3
    loop:
      - botocore
      - boto3

  - name: create ec2 instance
    amazon.aws.ec2_instance:
      name: "{{ item }}"
      vpc_subnet_id: "{{ subnet_id }}"
      security_group: "{{ sg_id }}"
      image_id: "{{ ami_id }}"
      instance_type: "{{ instance_type }}"

    loop:
      - mysql
      - backend 
      - frontend

    register: ec2_info

  # - name: print the results
  #   ansible.builtin.debug:
  #     msg: " {{ ec2_info }}"

  - name: print private ip's 
    ansible.builtin.debug:
      msg: "{{ item.instances[0].private_ip_address }}"
  
    loop: "{{ ec2_info.results }}"

  - name: create r53 private ip's
    amazon.aws.route53:
      state: present
      zone: katta.blog
      record: "{{ item.item }}.katta.blog"
      type: A
      ttl: 1
      value: "{{ item.instances[0].private_ip_address }}"
      wait: true
      overwrite: true
    loop: "{{ ec2_info.results }}"

  - name: create r53 public ip's
    amazon.aws.route53:
      state: present
      zone: katta.blog
      record: katta.blog
      type: A
      ttl: 1
      value: "{{ item.instances[0].public_ip_address }}"
      wait: true
      overwrite: true
    loop: "{{ ec2_info.results }}"
    when: item.item == "frontend"