- name: Install pip module
  ansible.builtin.pip:
      name: "{{ item }}"
      executable: pip3 
  loop:
      - PyMySQL
      - cryptography

- name: disable existing nodeJS
  ansible.builtin.command: "dnf module disable nodejs -y"

- name: enable nodeJS
  ansible.builtin.command: "dnf module enable nodejs:20 -y"

- name: install nodeJS
  ansible.builtin.package:
    name: nodejs
    state: present

- name: create user 
  ansible.builtin.user:
    name: expense

- name: create app directory
  ansible.builtin.file:
    path: /app
    state: directory

- name: Download file from a file path
  ansible.builtin.get_url:
    url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
    dest: /tmp/backend.zip

- name: Unzip the file
  ansible.builtin.unarchive:
      src: /tmp/backend.zip
      dest: /app
      remote_src: yes

- name: Install npm package
  community.general.npm:
      path: /app

- name: Copy file with owner and permissions
  ansible.builtin.template:
      src: be.service.j2
      dest: /etc/systemd/system/backend.service

- name: install mysql
  ansible.builtin.package:
      name: mysql
      state: present

- name: import mysql data
  community.mysql.mysql_db:
      state: import
      name: all
      login_user: root
      login_password: "{{be_pw}}"
      login_host: 172.31.23.118
      target: /app/schema/backend.sql

- name: daemon reload and restart service
  ansible.builtin.systemd_service:
      enabled: true
      state: restarted
      daemon_reload: true
      name: backend